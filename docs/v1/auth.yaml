paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /auth/register:
    post:
      tags: [Auth]
      summary: User Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /auth/email/send-verification:
    post:
      tags: [Auth]
      summary: Send Verification Email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        '200':
          description: Email Sent
  /auth/password-verify:
    post:
      tags: [Auth]
      summary: Verify Password OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
      responses:
        '200':
          description: Verified
  /auth/forgot-password:
    post:
      tags: [Auth]
      summary: Forgot Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        '200':
          description: Email Sent
  /auth/reset-password:
    put:
      tags: [Auth]
      summary: Reset Password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password Reset
  /auth/update-password:
    put:
      tags: [Auth]
      summary: Update Password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        '200':
          description: Password Updated
  /auth/logout:
    get:
      tags: [Auth]
      summary: Logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logged Out
  /auth/user:
    get:
      tags: [Auth]
      summary: Get User Info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: 'test@test.com'
        password:
          type: string
          example: 'password'
    RegisterRequest:
      type: object
      required: [name, email, password, password_confirmation]
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        password_confirmation:
          type: string
    EmailRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
    PasswordVerifyRequest:
      type: object
      required: [email, otp]
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
    ResetPasswordRequest:
      type: object
      required: [email, password, password_confirmation]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        password_confirmation:
          type: string
    UpdatePasswordRequest:
      type: object
      required: [current_password, password, password_confirmation]
      properties:
        current_password:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
    AuthResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            accessToken:
              type: string
              example: '10|example.token.here'
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        email_verified_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
