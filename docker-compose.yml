version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: tm-app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 9000:9000
    networks:
      - tm_app
    depends_on:
      - mysql
      - redis
      - mailhog
    entrypoint: ["sh", "/var/www/docker/php/entrypoint.sh"]

  phpmyadmin: 
    image: phpmyadmin/phpmyadmin
    container_name: tm-phpmyadmin
    restart: unless-stopped
    ports: 
      - 8080:80
    environment: 
      PMA_HOST: mysql 
      PMA_PORT: 3306 
      MYSQL_ROOT_PASSWORD: root 
    depends_on: 
        - mysql 
    networks: 
      - tm_app

  nginx:
    image: nginx:alpine
    container_name: tm-nginx
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - tm_app

  mysql:
    image: mysql:8.0
    container_name: tm-mysql
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: task_app
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - tm_app

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: tm-swagger-ui
    environment:
      SWAGGER_JSON: /docs/openapi.yaml
    ports:
      - 5000:8080
    volumes:
      - ./docs:/docs
    networks:
      - tm_app

  redis:
    image: redis:latest
    container_name: tm-redis
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - tm_app

  mailhog:
    image: mailhog/mailhog
    container_name: tm-mailhog
    ports:
      - 8025:8025
    networks:
      - tm_app
  
networks:
  tm_app:

volumes:
  db_data:
